--
-- VHDL Architecture Board.poetic_circuit.studentVersion
--
-- Created:
--          by - jeann.UNKNOWN (DESKTOP-V46KISN)
--          at - 16:09:36 12.08.2021
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;
LIBRARY gates;
USE gates.gates.all;

LIBRARY Board;
LIBRARY Poetic;

ARCHITECTURE studentVersion OF poetic_circuit IS

    -- Architecture declarations
    constant signalBitNb: positive := 16;
    constant phaseBitNb: positive := 17;
    constant stepX: positive := 2;
    constant stepY: positive := 3;

    -- Internal signal declarations
    SIGNAL logic1      : std_uLogic;
    SIGNAL reset       : std_ulogic;
    SIGNAL resetSnch_N : std_ulogic;
    SIGNAL resetSynch  : std_ulogic;


    -- Component Declarations
    COMPONENT DFF
    PORT (
        CLK : IN     std_uLogic ;
        CLR : IN     std_uLogic ;
        D   : IN     std_uLogic ;
        Q   : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT inverterIn
    PORT (
        in1  : IN     std_uLogic ;
        out1 : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT SimplePoeticBLDC
    GENERIC (
        pidBitNb   : positive := 12;
        dacBitNb   : positive := 8;
        dacopBitNb : positive := 2;
        dacchBitNb : positive := 2;
        dataBitNb  : positive := 8
    );
    PORT (
        ADC0_SDO   : IN     std_ulogic ;
        D          : IN     std_ulogic ;
        Hall_A     : IN     std_ulogic ;
        Hall_B     : IN     std_ulogic ;
        Hall_C     : IN     std_ulogic ;
        I          : IN     std_ulogic ;
        P          : IN     std_ulogic ;
        USB_TX     : IN     std_ulogic ;
        clock      : IN     std_ulogic ;
        enable     : IN     std_ulogic ;
        reset      : IN     std_ulogic ;
        ADC0_CS    : OUT    std_ulogic ;
        ADC_SCLK   : OUT    std_ulogic ;
        DAC0_SCLK  : OUT    std_ulogic ;
        DAC0_SDO   : OUT    std_ulogic ;
        DAC0_SYNC  : OUT    std_ulogic ;
        Sa_bot     : OUT    std_ulogic ;
        Sa_top     : OUT    std_ulogic ;
        Sb_bot     : OUT    std_ulogic ;
        Sb_top     : OUT    std_ulogic ;
        Sc_bot     : OUT    std_ulogic ;
        Sc_top     : OUT    std_ulogic ;
        USB_RX     : OUT    std_ulogic ;
        ledState_0 : OUT    std_ulogic ;
        ledState_1 : OUT    std_ulogic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : DFF USE ENTITY Board.DFF;
    FOR ALL : SimplePoeticBLDC USE ENTITY Poetic.SimplePoeticBLDC;
    FOR ALL : inverterIn USE ENTITY Board.inverterIn;
    -- pragma synthesis_on


BEGIN
    -- Architecture concurrent statements
    -- HDL Embedded Text Block 4 eb4
    logic1 <= '1';


    -- Instance port mappings.
    I_dff : DFF
        PORT MAP (
            CLK => clock,
            CLR => reset,
            D   => logic1,
            Q   => resetSnch_N
        );
    I_inv1 : inverterIn
        PORT MAP (
            in1  => reset_N,
            out1 => reset
        );
    I_inv2 : inverterIn
        PORT MAP (
            in1  => resetSnch_N,
            out1 => resetSynch
        );
    I0 : SimplePoeticBLDC
        GENERIC MAP (
            pidBitNb   => 12,
            dacBitNb   => 8,
            dacopBitNb => 2,
            dacchBitNb => 2,
            dataBitNb  => 8
        )
        PORT MAP (
            ADC0_SDO   => ADC0_SDO,
            D          => logic1,
            Hall_A     => Hall_A,
            Hall_B     => Hall_B,
            Hall_C     => Hall_C,
            I          => logic1,
            P          => logic1,
            USB_TX     => USB_TX,
            clock      => clock,
            enable     => logic1,
            reset      => resetSynch,
            ADC0_CS    => ADC0_CS,
            ADC_SCLK   => ADC_SCLK,
            DAC0_SCLK  => DAC_SCLK,
            DAC0_SDO   => DAC_SDO,
            DAC0_SYNC  => DAC_SYNC,
            Sa_bot     => Sa_bot,
            Sa_top     => Sa_top,
            Sb_bot     => Sb_bot,
            Sb_top     => Sb_top,
            Sc_bot     => Sc_bot,
            Sc_top     => Sc_top,
            USB_RX     => USB_RX,
            ledState_0 => LED0_0,
            ledState_1 => LED0_1
        );

END studentVersion;
