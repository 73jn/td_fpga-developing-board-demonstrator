--
-- VHDL Architecture RS232_test.serialPortFIFO_tb.struct
--
-- Created:
--          by - jeann.UNKNOWN (DESKTOP-V46KISN)
--          at - 15:20:28 11.08.2021
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

LIBRARY Poetic;
LIBRARY RS232;
LIBRARY RS232_test;

ARCHITECTURE struct OF serialPortFIFO_tb IS

    -- Architecture declarations
    constant clockFrequency: real := 66.0E6;
    constant baudRate: real := 16.0*9600.0;
    constant dataBitNb: positive := 8;
    constant fifoDepth: positive := 16;

    -- Internal signal declarations
    SIGNAL RxD            : std_ulogic;
    SIGNAL TxD            : std_ulogic;
    SIGNAL clock          : std_ulogic;
    SIGNAL consigne       : std_ulogic_vector(11 DOWNTO 0);
    SIGNAL endOfMsg       : std_ulogic;
    SIGNAL newCharacter   : std_ulogic;
    SIGNAL reset          : std_ulogic;
    SIGNAL rxData         : std_ulogic_vector(dataBitNb-1 DOWNTO 0);
    SIGNAL rxEmpty        : std_ulogic;
    SIGNAL rxRd           : std_ulogic;
    SIGNAL serialConsigne : std_ulogic_vector(7 DOWNTO 0);
    SIGNAL txData         : std_ulogic_vector(dataBitNb-1 DOWNTO 0);
    SIGNAL txFull         : std_ulogic;
    SIGNAL txWr           : std_ulogic;


    -- Component Declarations
    COMPONENT serialAsciiDecoder
    PORT (
        clock        : IN     std_ulogic ;
        consigne     : IN     std_ulogic_vector (7 DOWNTO 0);
        endOfMsg     : IN     std_ulogic ;
        newCharacter : IN     std_ulogic ;
        reset        : IN     std_ulogic ;
        output       : OUT    std_ulogic_vector (11 DOWNTO 0)
    );
    END COMPONENT;
    COMPONENT uartController
    GENERIC (
        dataBitNb : positive := 8
    );
    PORT (
        clock        : IN     std_ulogic ;
        reset        : IN     std_ulogic ;
        rxData       : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        rxEmpty      : IN     std_ulogic ;
        txFull       : IN     std_ulogic ;
        consigne     : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        endOfMsg     : OUT    std_ulogic ;
        newCharacter : OUT    std_ulogic ;
        rxRd         : OUT    std_ulogic ;
        txData       : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        txWr         : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT serialPortFIFO
    GENERIC (
        baudRateDivide : positive := 2083;
        dataBitNb      : positive := 8;
        txFifoDepth    : positive := 8;
        rxFifoDepth    : positive := 8
    );
    PORT (
        RxD     : IN     std_ulogic ;
        TxD     : OUT    std_ulogic ;
        clock   : IN     std_ulogic ;
        reset   : IN     std_ulogic ;
        rxEmpty : OUT    std_ulogic ;
        rxRd    : IN     std_ulogic ;
        rxData  : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        txData  : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        txFull  : OUT    std_ulogic ;
        txWr    : IN     std_ulogic 
    );
    END COMPONENT;
    COMPONENT serialPortFIFO_tester
    GENERIC (
        dataBitNb      : positive := 8;
        clockFrequency : real     := 66.0E6;
        baudRate       : real     := 9600.0
    );
    PORT (
        TxD     : IN     std_ulogic ;
        rxData  : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        rxEmpty : IN     std_ulogic ;
        txFull  : IN     std_ulogic ;
        RxD     : OUT    std_ulogic ;
        clock   : OUT    std_ulogic ;
        reset   : OUT    std_ulogic ;
        txData  : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        txWr    : OUT    std_ulogic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : serialAsciiDecoder USE ENTITY Poetic.serialAsciiDecoder;
    FOR ALL : serialPortFIFO USE ENTITY RS232.serialPortFIFO;
    FOR ALL : serialPortFIFO_tester USE ENTITY RS232_test.serialPortFIFO_tester;
    FOR ALL : uartController USE ENTITY Poetic.uartController;
    -- pragma synthesis_on


BEGIN

    -- Instance port mappings.
    I3 : serialAsciiDecoder
        PORT MAP (
            clock        => clock,
            consigne     => serialConsigne,
            endOfMsg     => endOfMsg,
            newCharacter => newCharacter,
            reset        => reset,
            output       => consigne
        );
    I2 : uartController
        GENERIC MAP (
            dataBitNb => 8
        )
        PORT MAP (
            clock        => clock,
            reset        => reset,
            rxData       => rxData,
            rxEmpty      => rxEmpty,
            txFull       => txFull,
            consigne     => serialConsigne,
            endOfMsg     => endOfMsg,
            newCharacter => newCharacter,
            rxRd         => rxRd,
            txData       => OPEN,
            txWr         => OPEN
        );
    I0 : serialPortFIFO
        GENERIC MAP (
            baudRateDivide => integer(clockFrequency/baudRate),
            dataBitNb      => dataBitNb,
            txFifoDepth    => fifoDepth,
            rxFifoDepth    => 1
        )
        PORT MAP (
            RxD     => RxD,
            TxD     => TxD,
            clock   => clock,
            reset   => reset,
            rxEmpty => rxEmpty,
            rxRd    => rxRd,
            rxData  => rxData,
            txData  => txData,
            txFull  => txFull,
            txWr    => txWr
        );
    I1 : serialPortFIFO_tester
        GENERIC MAP (
            dataBitNb      => dataBitNb,
            clockFrequency => clockFrequency,
            baudRate       => baudRate
        )
        PORT MAP (
            TxD     => TxD,
            rxData  => rxData,
            rxEmpty => rxEmpty,
            txFull  => txFull,
            RxD     => RxD,
            clock   => clock,
            reset   => reset,
            txData  => txData,
            txWr    => txWr
        );

END struct;
